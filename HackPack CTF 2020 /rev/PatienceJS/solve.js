process.stdin.resume();
process.stdin.setEncoding("utf8");
// Your code here!

const _0x_0x362d = [
  "charCodeAt",
  "0xm",
  "from",
  "0xs",
  "unshift",
  "value",
  "getElementById",
];
(function (_0xe40be0, _0x362d5c) {
  const _0x37a08f = function (_0x4115ff) {
    while (--_0x4115ff) {
      _0xe40be0["push"](_0xe40be0["shift"]());
    }
  };
  _0x37a08f(++_0x362d5c);
})(_0x_0x362d, 0x9f);
const _0x_0x37a0 = function (_0xe40be0, _0x362d5c) {
  _0xe40be0 = _0xe40be0 - 0x0;
  let _0x37a08f = _0x_0x362d[_0xe40be0];
  return _0x37a08f;
};
function _0x_0x4d92b3(_0x2073b6) {
  for (let _0xacb926 = 0x42; _0xacb926 > 0x0; )
    _0x2073b6[_0x_0x37a0("0x6")](_0x2073b6["pop"]()), --_0xacb926;
  return _0x2073b6["join"]("");
}
function _0x_0x520818() {
  return _0x_0x15514a() + 0x2;
}
function _0x_0x3e8cac() {
  return _0x_0x5e606f() - 0x3;
}
function _0x_0x3cba06() {
  return _0x_0x113447() + 0x4;
}
function _0x_0x2084e6() {
  return _0x_0x458ed9() + 0x2;
}
function _0x_0x15514a() {
  return _0x_0x5c9995() - 0x3;
}
function _0x_0x4c8b01() {
  return _0x_0x1cbc84() - 0x7;
}
function _0x_0x41d5db() {
  return _0x_0x5a044c() - 0x3;
}
function _0x_0x508602() {
  return _0x_0x2f88c3() + 0x9;
}
function _0x_0x190d39() {
  return _0x_0x113447() + 0x2;
}
function _0x_0x5a044c() {
  return _0x_0x5e606f() - 0x2;
}
function _0x_0x5c9995() {
  return _0x_0x113447() - 0x2;
}
function _0x_0x113447() {
  return _0x_0x155839() - 0x6;
}
function _0x_0x26c89c() {
  return _0x_0x7774ae() - 0xa;
}
function _0x_0x155839() {
  return _0x_0x1cbc84() - 0x4;
}
function _0x_0x7774ae() {
  return _0x_0x5e606f() + 0x6;
}
function _0x_0x2f88c3() {
  return _0x_0x458ed9() - 0xa;
}
function _0x_0x1cbc84() {
  return _0x_0x5e606f() - 0x9;
}
function _0x_0x458ed9() {
  return _0x_0x5e606f() - 0x46;
}
function _0x_0x5e606f() {
  return 0xa0 - 0x29;
}
function _0x_0x4c89a5(_0x26f0f9) {
  try {
    let _0x13d51d = _0x_0x4d92b3(Array[_0x_0x37a0("0x4")](_0x26f0f9));
    _0x13d51d = Array(30);
    for (let _0x23f038 = 0x1b; _0x23f038 > 0x0; _0x23f038--) {
      if (_0x23f038 === 0x17) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x4c8b01())

      } else if (_0x23f038 === 0x1) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x3e8cac())

      } else if (_0x23f038 === 0x19) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x190d39())

      } else if (_0x23f038 === 0x3 || _0x23f038 === 0x14) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x2084e6())

      } else if (_0x23f038 === 0x16) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x5a044c())

      } else if (_0x23f038 === 0x8) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x2f88c3())

      } else if (_0x23f038 === 0xc) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x520818())

      } else if (_0x23f038 === 0x15) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x5c9995())

      } else if (_0x23f038 === 0x10) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x155839())

      } else if (
        _0x23f038 === 0x0 ||
        _0x23f038 === 0x18 ||
        _0x23f038 === 0x12 ||
        _0x23f038 === 0x4
      ) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x15514a())

      } else if (_0x23f038 === 0x1a) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x508602())

      } else if (_0x23f038 === 0x5) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x5e606f())

      } else if (_0x23f038 === 0x11) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x26c89c())

      } else if (_0x23f038 === 0x7) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x1cbc84())

      } else if (_0x23f038 === 0x2) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x3cba06())

      } else if (_0x23f038 === 0x1b) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x41d5db())

      } else if (_0x23f038 === 0x9) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x7774ae())

      } else if (_0x23f038 === 0x13) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x113447())

      } else if (_0x23f038 === 0x6) {
        _0x13d51d[_0x23f038] = String.fromCharCode(_0x_0x458ed9())

      }
    }
    console.log(_0x13d51d.join(""));
    return 0x0;
  } catch (_0x195dd0) {}
  return -0x1;
}
console.log(_0x_0x4c89a5(_0x26f0f9));
