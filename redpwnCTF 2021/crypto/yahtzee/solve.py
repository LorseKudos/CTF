encs = ['341f317e1dccabe06c6e36c33ea7d2e247d747ea45378b903d5c64d272140dab9c48839e1c46a2acbde8823d9f36e89a8eca58c185aee61fbf7a661a8415ff1c22ec12d178486abe141426a330c8bf83d50c4d06b23f46f8ee16bdcc20a0e7',
        '341f317e1dccabe06c6e36c33ea7d2e247d747ea45378b903d5c64d272140dab9c48839e135eb0eba0b48b05b332b1b1868a01d0a8e9fd25a3064a76842ed21f3ce11dc1614564be141426a330c8bf83d50c4d06b23f46f8ee16bdcc20a0e7',
        '341f317e1dccabe06c6e36c33ea7d2e247d747ea45378b903d5c64d272140dab9c48839e1c46a2acbae68c2f9026e7acaf9707d2fabbe01eed2f79248d21904713cf54d07c6e63f610047aa51b8697b5900b5713a22e51e1ee16bdcc20a0e7',
        '341f317e1dccabe06c6e36c33ea7d2e247d747ea45378b903d5c64d272140dab9c48839e1c46a2acbae68c2f9026e7acaf9707d2fabbe01eed2f79248d21904713cf54d07c6e63f610047aa51b8697b5900b5713a22e51e1ee16bdcc20a0e7',
        '341f317e1dc3b4ef7f3567c90e8592f354ed47f6492bdfc3035c4fad291b0fb0c25fd6c3555ba2e2afa482388b73f4e5be9b1dc1b3b4e95aac277165823bd64622ff4cc1614564be141426a330c8bf83d50c4d06b23f46f8ee16bdcc20a0e7',
        '341f317e1dccabe06c6e36c33ea7d2e247d747ea45378b903d5c64d272140dab9c48839e1c46a2acbae68c2f9026e7acaf9707d2fabce21baa32252db50d941e38c714896d4324ed2a1806897786ac9893155a1cb23f46f8ee16bdcc20a0e7',
        '341f317e1dccabe06c6e36c33ea7d2e247d747ea45378b903d5c64d272140dab9c48839e1c46a2acbae68c2f9026e7acaf9707d2fabce21baa32252db50d941e38c714896d4324ed2a1806897786ac9893155a1cb23f46f8ee16bdcc20a0e7',
        '341f317e1dccabe06c6e36c33ea7d2e247d747ea45378b903a5e61956145139da51b9eca2a46b9e9a9b790058a49dff6b78a1b85aaa3f35aac277165823bd64622ff4cc1614564be141426a330c8bf83d50c4d06b23f46f8ee16bdcc20a0e7',
        '341f317e1dccabe06c6e31cd30b5ddf248ed64aa1d2db3c4345772c1692a158dad1cc1ca0702a1f5a6a482388b73f4e5be9b1dc1b3b4e95aac277165823bd64622ff4cc1614564be141426a330c8bf83d50c4d06b23f46f8ee16bdcc20a0e7',
        '341f317e1dccabe06c6e36c33ea7d2e247d747ea45378b903d5c64d272140dab9c48839e1c46a2acbae68c2f9026e7acaf9707d2fabce21baa32252db50d941e38c714896d4324ed2a1806897786ac9893155a1cb23f46f8ee16bdcc20a0e7',
        '341f317e1dccabe06c6e36c33ea7d2e247d747ea45378b903d5c64d272140dab9c48839e1c46a2acbae68c2f9026e7acaf9707d2fabbe01eed2f79248d21904713cf54d07c6e63f610047aa51b8697b5900b5713a22e51e1ee16bdcc20a0e7',
        '341f317e1dccabe06c6e36c33ea7d2e247d747ea45378b903d5c64d272140dab9c48839e135eb0eba0b48b05b332b1b1868a01d0a8e9fd25a3064a76842ed21f3ce11dc1614564be141426a330c8bf83d50c4d06b23f46f8ee16bdcc20a0e7',
        '341f317e1dccabe06c6e36c33ea7d2e247d747ea45378b903d5c64d272140dab9c48839e135eb0eba0b48b05b332b1b1868a01d0a8e9fd25a3064a76842ed21f3ce11dc1614564be141426a330c8bf83d50c4d06b23f46f8ee16bdcc20a0e7',
        '341f317e1dccabe06c6e31cd30b5ddf248ed64aa1d2db3c4345772c1692a158dad1cc1ca0702a1f5a6a482388b73f4e5be9b1dc1b3b4e95aac277165823bd64622ff4cc1614564be141426a330c8bf83d50c4d06b23f46f8ee16bdcc20a0e7',
        '341f317e1dccabe06c6e36c33ea7d2e247d747ea45378b903d5c64d272140dab9c48839e1c46a2acbde8823d9f36e89a8eca58c185aee61fbf7a661a8415ff1c22ec12d178486abe141426a330c8bf83d50c4d06b23f46f8ee16bdcc20a0e7',
        '341f317e1dccabe06c6e36c33ea7d2e247d747ea45378b903a5e61956145139da51b9eca2a46b9e9a9b790058a49dff6b78a1b85aaa3f35aac277165823bd64622ff4cc1614564be141426a330c8bf83d50c4d06b23f46f8ee16bdcc20a0e7',
        '341f317e1dc3b4ef7f3567c90e8592f354ed47f6492bdfc3035c4fad291b0fb0c25fd6c3555ba2e2afa482388b73f4e5be9b1dc1b3b4e95aac277165823bd64622ff4cc1614564be141426a330c8bf83d50c4d06b23f46f8ee16bdcc20a0e7',
        '341f317e1dccabe06c6e36c33ea7d2e246de52f9576984ef0b063186450113a7801cdce11b7d8ebfb5f0916a947ffde5be9b1dc1b3b4e95aac277165823bd64622ff4cc1614564be141426a330c8bf83d50c4d06b23f46f8ee16bdcc20a0e7',
        ]



# flag = "flag{"

# quote = ['a']*1000

# for i in range(len(encs)):
#     enc1 = bytes.fromhex(encs[10])
#     enc2 = bytes.fromhex(encs[i])
#     is_flag = False
#     idx = 0
#     for j in range(len(enc1)):
#         if enc1[j] ^ enc2[j] != 0:
#             is_flag = True

#         if is_flag and idx < 5:
#             quote[j] = chr(enc1[j] ^ enc2[j] ^ ord(flag[idx]))
#             idx += 1

# print("".join(quote))

quote = b"Life isnt about getting and having, its about giving and being"
enc1 = bytes.fromhex(encs[10])
enc2 = bytes.fromhex(encs[4])
for j in range(len(quote)):
    print(chr(enc1[j] ^ quote[j] ^ enc2[j]), end="")
